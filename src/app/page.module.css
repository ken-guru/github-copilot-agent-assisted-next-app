.container {
  min-height: 100vh;
  background-color: var(--background);
  display: flex;
  flex-direction: column;
  padding-bottom: env(safe-area-inset-bottom);
}

.wrapper {
  max-width: 1200px;
  margin: 0 auto;
  width: 100%;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.wrapper header,
.wrapper .setupGrid,
.wrapper .planningGrid,
.wrapper .activityGrid,
.wrapper .completedGrid {
  padding: 1rem;
}

.headerContent {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  align-items: center;
  gap: 1rem;
}

.headerControls {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.title {
  font-size: 2rem;
  font-weight: bold;
  color: var(--foreground);
  margin: 0;
}

.resetButtonContainer {
  justify-self: end;
  min-width: 70px; /* Approximately the width of the reset button */
}

.resetButton {
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  background-color: var(--background-muted);
  color: var(--foreground);
  border: 1px solid var(--border);
  cursor: pointer;
  transition: all 0.2s ease;
}

.resetButton:hover {
  background-color: var(--background);
  border-color: var(--border-hover);
  color: var(--error);
}

.setupGrid,
.planningGrid,
.activityGrid,
.completedGrid {
  display: grid;
  gap: 2rem;
}

.setupGrid {
  flex: 1;
  display: flex;
  align-items: flex-start;
  justify-content: center;
}

.planningGrid {
  flex: 1;
  max-width: 800px;
  margin: 0 auto;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.planningGrid h2 {
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
  color: var(--foreground);
}

.planningGrid p {
  color: var(--foreground-muted);
  margin-bottom: 2rem;
}

.activityGrid {
  grid-template-columns: 300px 1fr;
  flex: 1;
  display: grid;
  gap: 1rem;
  grid-template-columns: 2fr 3fr;
  grid-template-rows: 1fr;
  min-height: 0; /* Allows grid children to properly size */
  height: 100%; /* Ensure the grid takes full height */
}

.completedGrid {
  flex: 1;
  display: flex;
  justify-content: center;
  padding-top: 2rem;
}

.summaryContainer {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  text-align: center; /* Center align content for better focus */
}

.summaryContainer h2 {
  margin-top: 1.5rem;
  font-size: 1.75rem;
  color: var(--accent);
  animation: fadeInUp 0.5s ease-out;
}

.completionSuccess {
  margin: 2rem 0;
  padding: 1.5rem;
  border-radius: 0.5rem;
  background-color: var(--success-light);
  border: 1px solid var(--success);
  color: var(--success-dark);
  font-size: 1.125rem;
  animation: fadeIn 0.6s ease-out;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.completionSuccess svg {
  margin-right: 0.75rem;
  color: var(--success);
  animation: scaleCheckmark 0.7s ease-out;
}

.timelineContainer,
.progressContainer {
  background-color: var(--background);
  border-radius: 0.5rem;
  border: 1px solid var(--border);
}

.timelineContainer {
  display: flex;
  flex-direction: column;
  min-height: 400px;
  flex: 1; /* Add this to allow growing */
  height: 100%; /* Ensure full height */
}

.progressContainer {
  grid-column: 1 / -1;
  grid-row: 2;
  margin-top: 1rem;
}

/* Button styles */
.button {
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  font-weight: 600;
  border-radius: 0.375rem;
  cursor: pointer;
  transition: all 0.2s ease;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.startButton {
  composes: button;
  background-color: var(--primary);
  color: white;
  border: none;
  margin-top: 1.5rem;
  width: 100%;
  max-width: 300px;
}

.startButton:hover {
  background-color: var(--primary-dark);
}

.startButton:disabled {
  background-color: var(--background-muted);
  color: var(--foreground-muted);
  cursor: not-allowed;
}

.startNewButton {
  composes: button;
  background-color: var(--accent);
  color: white;
  border: none;
  margin-top: 2rem;
  width: 100%;
  max-width: 400px; /* Increased width for more prominence */
  font-size: 1.25rem; /* Larger font size */
  padding: 1rem 1.5rem; /* More padding for better visibility */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); /* Add shadow for depth */
  position: relative;
  overflow: hidden; /* For the glow effect */
  animation: pulseButton 2s infinite; /* Subtle pulse animation */
  display: block; /* Ensure it takes full width */
  margin-left: auto;
  margin-right: auto;
  transition: all 0.3s ease;
  font-weight: 700; /* Make text bolder */
  letter-spacing: 0.5px; /* Add letter spacing for emphasis */
  border-radius: 0.5rem; /* Slightly rounded corners */
}

.startNewButton:hover {
  background-color: var(--accent-hover);
  transform: translateY(-3px); /* Increased lift effect */
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2); /* Enhanced shadow on hover */
}

.startNewButton:active {
  transform: translateY(1px); /* Press effect */
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.startNewButton::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255,255,255,0.3) 0%, transparent 60%);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.4s ease;
  animation: rotateGlow 3s infinite linear;
}

.startNewButton:hover::before {
  opacity: 1;
}

.startNewButton span {
  display: flex;
  align-items: center;
  justify-content: center;
}

.startNewButton svg {
  margin-right: 0.5rem;
  font-size: 1.25rem;
}

@keyframes pulseButton {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.03);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes rotateGlow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Reset feedback overlay styles */
.resetFeedbackOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--background);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  animation: fadeIn 0.3s ease-in-out;
}

.resetFeedbackContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  border-radius: 0.5rem;
  background-color: var(--background);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
  animation: scaleIn 0.5s ease-out;
}

.resetFeedbackContent p {
  margin-top: 1rem;
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--foreground);
}

.checkmarkIcon {
  width: 64px;
  height: 64px;
  fill: var(--accent);
  animation: scaleCheckmark 0.5s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes scaleIn {
  from { transform: scale(0.8); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
}

@keyframes scaleCheckmark {
  0% { transform: scale(0); }
  50% { transform: scale(1.2); }
  100% { transform: scale(1); }
}

/* Media query for smaller screens */
@media (max-width: 768px) {
  .wrapper header,
  .wrapper .setupGrid,
  .wrapper .planningGrid,
  .wrapper .activityGrid,
  .wrapper .completedGrid {
        padding: 0.5rem;
  }

  .headerContent {
    grid-template-columns: 1fr auto auto;
    gap: 0.5rem;
  }

  .title {
    font-size: 1.5rem;
  }

  .activityGrid {
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr;
    gap: 0.5rem;
  }

  .timelineContainer {
    display: none;
  }

  .progressContainer {
    grid-row: 1;
    margin-top: 0;
    margin-bottom: 0.5rem;
  }

  .completedGrid {
    gap: 0.5rem;
  }

  .container {
    padding-bottom: env(safe-area-inset-bottom);
  }

  .planningGrid {
    padding: 0.5rem 1rem;
  }
}

/* Media query for landscape mode on mobile */
@media (max-width: 768px) and (orientation: landscape) {
  .activityGrid {
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr;
  }
}
