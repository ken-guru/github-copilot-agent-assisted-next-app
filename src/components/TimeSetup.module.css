.container {
  background-color: var(--background);
  padding: var(--padding-medium);
  border-radius: var(--radius-card); /* Updated from var(--space-sm) to use semantic radius */
  box-shadow: var(--shadow-card);
}

.heading {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: var(--space-md);
  color: var(--foreground);
}

.modeSelector {
  display: flex;
  margin-bottom: var(--space-md);
  gap: var(--gap-medium);
  justify-content: space-evenly;
}

.button {
  padding: var(--space-xs) var(--space-md);
  border-radius: var(--radius-button); /* Updated from var(--space-xs) to use semantic radius */
  border: none;
  cursor: pointer;
  flex-grow: 1;
  text-align: center;
}

.buttonPrimary {
  background-color: var(--accent-color);
  color: var(--background);
  transition: all 0.2s ease, outline-offset 0.2s ease;
  outline: 2px solid transparent;
  outline-offset: 0;
}

.buttonPrimary:focus-visible {
  outline: 2px solid var(--accent-color);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px rgba(var(--accent-color-rgb), 0.35);
}

.buttonSecondary {
  background-color: var(--background-muted);
  color: var(--foreground);
}

.inputGrid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: var(--gap-medium);
}

.inputGroup {
  display: flex;
  flex-direction: column;
  margin-bottom: var(--space-md);
}

.label {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  margin-bottom: var(--space-xs);
  color: var(--foreground-muted);
}

.input {
  width: 100%;
  padding: var(--space-sm);
  border: 2px solid #d0d0d0; /* Lighter, more visible border for light mode */
  border-radius: var(--radius-input); /* Updated from var(--space-sm) to use semantic radius */
  background-color: #ffffff; /* Pure white in light mode */
  color: var(--text-primary);
  transition: all 0.2s ease;
  font-size: 0.875rem;
}

.dark .input,
[data-theme="dark"] .input,
.dark-mode .input {
  background-color: #383838; /* Much lighter gray for dark mode */
  border-color: #555555; /* More visible border in dark mode */
  color: var(--text-primary-dark);
}

.input:focus {
  outline: none;
  border-color: var(--accent-color);
  background-color: #f9f9f9; /* Very slight gray to indicate focus in light mode */
}

.input:hover:not(:focus) {
  border-color: var(--border-hover, var(--border-color));
}

.submitButton {
  width: 100%;
  padding: var(--space-xs);
  background-color: var(--accent-color);
  color: var(--background);
  border: none;
  border-radius: var(--radius-button); /* Updated from var(--space-xs) to use semantic radius */
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease, outline-offset 0.2s ease;
  outline: 2px solid transparent;
  outline-offset: 0;
}

.submitButton:focus-visible {
  outline: 2px solid var(--accent-color);
  outline-offset: 2px;
  box-shadow: var(--shadow-focus);
}

.submitButton:hover {
  background-color: var(--accent-color-hover);
}

/* Media query for smaller screens */
@media (max-width: 768px) {
  .container {
    padding: var(--space-xs); /* Reduced from var(--padding-small) for better mobile spacing */ 
  }
  
  .timeInputGroup {
    gap: var(--space-sm); /* Slightly reduced gap on mobile */
  }
  
  .timeInput {
    padding: var(--space-sm); /* Adjust padding for better touch targets */
    font-size: 1rem; /* Ensure readable font size on mobile */
    min-height: 44px; /* Ensure minimum touch target size */
  }
  
  .button {
    padding: var(--space-sm) var(--space-md); /* Better touch targets */
    min-height: 44px; /* Minimum touch target size */
    font-size: 0.9rem; /* Readable font size */
  }
  
  .modeSelector {
    gap: var(--space-xs); /* Reduced gap on mobile */
  }
  
  .modeButton {
    padding: var(--space-xs) var(--space-sm); /* Adjust padding for mobile */
    font-size: 0.875rem; /* Slightly smaller font */
    min-height: 40px; /* Good touch target */
  }
}

@media (max-width: 576px) {
  .timeInputGroup {
    flex-direction: column; /* Stack inputs vertically on very small screens */
    gap: var(--space-sm);
  }
  
  .timeInput {
    width: 100%; /* Full width inputs on very small screens */
  }
  
  .modeSelector {
    flex-direction: column; /* Stack mode buttons vertically */
    gap: var(--space-xs);
  }
  
  .modeButton {
    width: 100%; /* Full width buttons */
    justify-content: center; /* Center text */
  }
  
  .button {
    width: 100%; /* Full width submit button */
    padding: var(--space-md); /* Larger padding for better touch */
  }
}