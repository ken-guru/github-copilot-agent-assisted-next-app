/* TimeDisplay.module.css - Mobile-first, Accessible Design System Implementation */

/* Main time display container */
.timeDisplay {
  /* Layout */
  display: flex;
  flex-direction: column;
  align-items: center;
  
  /* Spacing */
  gap: var(--space-2);
  
  /* Visual styling */
  background: var(--color-surface-primary);
  border-radius: var(--radius-md);
  padding: var(--space-3) var(--space-4);
  
  /* Subtle visual separation */
  border: 1px solid var(--color-border-subtle);
  
  /* Smooth transitions */
  transition: all var(--transition-base) var(--ease-in-out);
}

/* Dark theme adjustments */
.dark .timeDisplay {
  border-color: var(--color-border-secondary);
}

/* Time portion styling */
.time {
  /* Typography */
  font-size: var(--font-size-xl);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-tight);
  color: var(--color-text-primary);
  
  /* Layout */
  text-align: center;
  
  /* Ensure consistent spacing */
  margin: 0;
  
  /* Prevent text wrapping */
  white-space: nowrap;
  
  /* Font feature for better number display */
  font-variant-numeric: tabular-nums;
}

/* Date portion styling */
.date {
  /* Typography */
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  line-height: var(--line-height-normal);
  color: var(--color-text-secondary);
  
  /* Layout */
  text-align: center;
  
  /* Ensure consistent spacing */
  margin: 0;
  
  /* Allow wrapping for longer dates */
  word-wrap: break-word;
  hyphens: auto;
}

/* Compact variant for inline use */
.timeDisplay.compact {
  /* Reduced spacing */
  padding: var(--space-2) var(--space-3);
  gap: var(--space-1);
  
  /* Smaller border radius */
  border-radius: var(--radius-sm);
}

.timeDisplay.compact .time {
  font-size: var(--font-size-lg);
}

.timeDisplay.compact .date {
  font-size: var(--font-size-xs);
}

/* Large variant for prominence */
.timeDisplay.large {
  /* Increased spacing */
  padding: var(--space-6) var(--space-8);
  gap: var(--space-3);
  
  /* Larger border radius */
  border-radius: var(--radius-lg);
}

.timeDisplay.large .time {
  font-size: var(--font-size-3xl);
}

.timeDisplay.large .date {
  font-size: var(--font-size-base);
}

/* Horizontal layout variant */
.timeDisplay.horizontal {
  /* Change to row layout */
  flex-direction: row;
  align-items: baseline;
  gap: var(--space-3);
}

.timeDisplay.horizontal .time {
  /* Maintain prominence in horizontal layout */
  flex-shrink: 0;
}

.timeDisplay.horizontal .date {
  /* Allow date to wrap if needed */
  flex: 1;
  text-align: left;
}

/* Card variant with enhanced visual styling */
.timeDisplay.card {
  /* Enhanced visual depth */
  background: var(--color-surface-secondary);
  box-shadow: var(--shadow-sm);
  border: none;
}

.dark .timeDisplay.card {
  box-shadow: var(--shadow-dark-sm);
}

/* Minimal variant for subtle display */
.timeDisplay.minimal {
  /* Remove visual styling */
  background: transparent;
  border: none;
  padding: var(--space-1);
  border-radius: 0;
}

/* Interactive variant with hover effects */
.timeDisplay.interactive {
  /* Add cursor pointer */
  cursor: pointer;
  
  /* Enhanced transition */
  transition: all var(--transition-fast) var(--ease-in-out);
}

@media (hover: hover) {
  .timeDisplay.interactive:hover {
    /* Subtle hover effect */
    background: var(--color-surface-tertiary);
    border-color: var(--color-border-interactive);
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }
  
  .dark .timeDisplay.interactive:hover {
    box-shadow: var(--shadow-dark-md);
  }
}

.timeDisplay.interactive:focus {
  /* Focus styling */
  outline: 2px solid var(--color-focus-ring);
  outline-offset: 2px;
}

.timeDisplay.interactive:active {
  /* Active state */
  transform: translateY(0);
}

/* Status color variants */
.timeDisplay.success {
  border-color: var(--color-semantic-success);
}

.timeDisplay.success .time {
  color: var(--color-semantic-success);
}

.timeDisplay.warning {
  border-color: var(--color-semantic-warning);
}

.timeDisplay.warning .time {
  color: var(--color-semantic-warning);
}

.timeDisplay.danger {
  border-color: var(--color-semantic-danger);
}

.timeDisplay.danger .time {
  color: var(--color-semantic-danger);
}

.timeDisplay.info {
  border-color: var(--color-semantic-info);
}

.timeDisplay.info .time {
  color: var(--color-semantic-info);
}

/* Responsive adjustments */
@media (max-width: 480px) {
  .timeDisplay {
    /* More compact on small screens */
    padding: var(--space-2) var(--space-3);
    gap: var(--space-1);
  }
  
  .time {
    font-size: var(--font-size-lg);
  }
  
  .date {
    font-size: var(--font-size-xs);
  }
  
  /* Force compact style on mobile for large variant */
  .timeDisplay.large {
    padding: var(--space-3) var(--space-4);
    gap: var(--space-2);
  }
  
  .timeDisplay.large .time {
    font-size: var(--font-size-xl);
  }
  
  .timeDisplay.large .date {
    font-size: var(--font-size-sm);
  }
}

/* Tablet and up */
@media (min-width: 768px) {
  .timeDisplay {
    /* Slightly more generous spacing */
    padding: var(--space-4) var(--space-5);
    gap: var(--space-3);
  }
  
  .time {
    font-size: var(--font-size-2xl);
  }
  
  .date {
    font-size: var(--font-size-base);
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .timeDisplay {
    border-width: 2px;
  }
  
  .time,
  .date {
    font-weight: var(--font-weight-bold);
  }
  
  /* Ensure status colors are visible in high contrast */
  .timeDisplay.success,
  .timeDisplay.warning,
  .timeDisplay.danger,
  .timeDisplay.info {
    border-width: 3px;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .timeDisplay,
  .timeDisplay.interactive {
    transition: none;
  }
  
  .timeDisplay.interactive:hover,
  .timeDisplay.interactive:active {
    transform: none;
  }
}

/* Print styles */
@media print {
  .timeDisplay {
    /* Simplify for print */
    background: transparent;
    border: 1px solid #000;
    box-shadow: none;
    color: #000;
  }
  
  .time,
  .date {
    color: #000;
  }
  
  /* Remove interactive elements in print */
  .timeDisplay.interactive {
    cursor: default;
  }
}

/* Loading state for when time is being updated */
.timeDisplay.loading {
  opacity: 0.7;
  position: relative;
}

.timeDisplay.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 16px;
  height: 16px;
  margin: -8px 0 0 -8px;
  border: 2px solid var(--color-border-subtle);
  border-top-color: var(--color-interactive-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Error state for invalid time data */
.timeDisplay.error {
  background: var(--color-surface-danger);
  border-color: var(--color-semantic-danger);
  color: var(--color-text-danger);
}

.timeDisplay.error .time,
.timeDisplay.error .date {
  color: var(--color-text-danger);
}

/* Blinking indicator for live time updates */
.timeDisplay.live .time::after {
  content: '';
  display: inline-block;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--color-semantic-success);
  margin-left: var(--space-2);
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.3; }
}

/* Timezone indicator */
.timezone {
  /* Typography */
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-normal);
  color: var(--color-text-tertiary);
  
  /* Layout */
  text-align: center;
  margin-top: var(--space-1);
  
  /* Styling */
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Screen reader optimizations */
.visuallyHidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
